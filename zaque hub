local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local RunService = game:GetService("RunService")

-- Variável para armazenar o estado do ESP
local espOn = false
local espButtonPosition = UDim2.new(1, -110, 1, -60) -- Posição inicial do botão ESP

-- Função para criar a GUI e o botão ESP
local function createESPButton()
    -- Verifica e remove qualquer botão ESP existente
    if playerGui:FindFirstChild("ESP_ScreenGui") then
        playerGui:FindFirstChild("ESP_ScreenGui"):Destroy()
    end

    -- Cria uma ScreenGui para conter o botão
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ESP_ScreenGui"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false

    -- Cria o botão ESP
    local espButton = Instance.new("TextButton")
    espButton.Size = UDim2.new(0, 100, 0, 50)
    espButton.Position = espButtonPosition
    espButton.Text = espOn and "ESP On" or "ESP Off"
    espButton.Parent = screenGui

    local debounce = false
    local dragging = false
    local lastToggleTime = tick()

    -- Função para criar ou atualizar a barra de vida de um jogador
    local function createOrUpdateHealthBar(player)
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            -- Remove barra de vida existente, se houver
            if player.Character:FindFirstChild("HealthBar") then
                player.Character:FindFirstChild("HealthBar"):Destroy()
            end

            -- Cria nova barra de vida
            local healthBar = Instance.new("BillboardGui")
            healthBar.Name = "HealthBar"
            healthBar.Size = UDim2.new(4, 0, 0.6, 0) -- Ajusta a largura e altura da barra
            healthBar.StudsOffset = Vector3.new(0, 3, 0) -- Eleva a barra acima do player
            healthBar.AlwaysOnTop = true
            healthBar.Adornee = player.Character:WaitForChild("HumanoidRootPart")
            healthBar.Parent = player.Character

            local barBackground = Instance.new("Frame")
            barBackground.Size = UDim2.new(1, 0, 1, 0)
            barBackground.BackgroundColor3 = Color3.new(0, 0, 0)
            barBackground.BorderSizePixel = 1 -- Contorno preto fino
            barBackground.Parent = healthBar

            local bar = Instance.new("Frame")
            bar.Size = UDim2.new(player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth, 0, 1, 0)
            bar.BackgroundColor3 = Color3.new(0, 1, 0)
            bar.BorderSizePixel = 0
            bar.Parent = barBackground

            -- Atualiza a barra de vida quando a saúde do jogador muda
            player.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    local healthPercentage = player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth
                    bar.Size = UDim2.new(healthPercentage, 0, 1, 0) -- Garante que a barra não fique totalmente preta
                end
            end)
        end
    end

    -- Função para atualizar o ESP
    local function updateESP()
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character then
                if espOn then
                    if not player.Character:FindFirstChild("Highlight") then
                        local highlight = Instance.new("Highlight")
                        highlight.Adornee = player.Character
                        highlight.FillColor = Color3.new(1, 0, 0)
                        highlight.OutlineColor = Color3.new(1, 0, 0)
                        highlight.Parent = player.Character
                    end
                    createOrUpdateHealthBar(player)
                else
                    local highlight = player.Character:FindFirstChild("Highlight")
                    if highlight then
                        highlight:Destroy()
                    end
                    local healthBar = player.Character:FindFirstChild("HealthBar")
                    if healthBar then
                        healthBar:Destroy()
                    end
                end
            end
        end
    end

    -- Evento de clique do botão
    espButton.MouseButton1Click:Connect(function()
        if debounce or dragging then return end
        local currentTime = tick()
        if currentTime - lastToggleTime < 0.04 then return end -- Verifica se 40 milissegundos se passaram
        debounce = true
        espOn = not espOn
        espButton.Text = espOn and "ESP On" or "ESP Off"
        updateESP()
        lastToggleTime = currentTime
        wait(0.5)
        debounce = false
    end)

    -- Função para iniciar o arrasto
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = espButton.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    espButtonPosition = espButton.Position -- Atualiza a posição do botão
                end
            end)
        elseif input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = espButton.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    espButtonPosition = espButton.Position -- Atualiza a posição do botão
                end
            end)
        end
    end

    -- Função para atualizar a posição do botão durante o arrasto
    local function onInputChanged(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch) then
            local delta = input.Position - mousePos
            espButton.Position = UDim2.new(
                framePos.X.Scale,
                framePos.X.Offset + delta.X,
                framePos.Y.Scale,
                framePos.Y.Offset + delta.Y
            )
        end
    end

    espButton.InputBegan:Connect(onInputBegan)
    espButton.InputChanged:Connect(onInputChanged)

    -- Atualiza o ESP a cada 40 milissegundos
    RunService.Heartbeat:Connect(function()
        if espOn then
            updateESP()
        end
    end)

    -- Atualiza o ESP quando novos jogadores entram no jogo
    game.Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            updateESP()
        end)
    end)

    -- Atualiza o ESP quando um jogador renasce
    for _, player in pairs(game.Players:GetPlayers()) do
        player.CharacterAdded:Connect(function()
            updateESP()
        end)
    end
end

-- Cria o botão ESP inicialmente
createESPButton()

-- Recria o botão ESP quando o personagem do jogador é adicionado
player.CharacterAdded:Connect(function()
    createESPButton()
end)
