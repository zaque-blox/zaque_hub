local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local RunService = game:GetService("RunService")

-- Carregar a biblioteca Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Criar a Janela Principal
local Window = Fluent:CreateWindow({
    Title = "zaque hub " .. Fluent.Version,
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Theme = "Dark"
})

-- Criar as abas
local Tabs = {
    Credits = Window:AddTab({ Title = "üåü Credits" }),
    Settings = Window:AddTab({ Title = "‚öôÔ∏è Settings" }), -- √çcone removido
    Main = Window:AddTab({ Title = "üõ†Ô∏è Main" }),
    Visual = Window:AddTab({ Title = "üòé Visual" })
}

-- Aba Credits
Tabs.Credits:AddParagraph({
    Title = "Criador do Hub",
    Content = "Criador do hub feito por [ zaque_blox ]"
})

Tabs.Credits:AddParagraph({
    Title = "Vers√£o",
    Content = "1.1.0"
})

-- Aba Settings
Tabs.Settings:AddParagraph({
    Title = "Configura√ß√µes",
    Content = "Aqui voc√™ pode ajustar suas prefer√™ncias!"
})

-- Adicionar o Toggle "Notifica√ß√£o" na aba Settings
Tabs.Settings:AddToggle("NotificacaoToggle", {
    Title = "Notifica√ß√£o",
    Description = "Ativar ou desativar notifica√ß√µes do script",
    Default = false,
    Callback = function(state)
        if state then
            print("Notifica√ß√µes Ativadas")
            -- C√≥digo para ativar notifica√ß√µes
        else
            print("Notifica√ß√µes Desativadas")
            -- C√≥digo para desativar notifica√ß√µes
        end
    end
})

-- Aba Main
Tabs.Main:AddParagraph({
    Title = "Bem-vindo ao Hub!",
    Content = "Este √© o hub criado com a biblioteca Fluent!"
})

-- Aba Visual
Tabs.Visual:AddParagraph({
    Title = "Personaliza√ß√£o Visual",
    Content = "Aqui voc√™ pode ajustar as op√ß√µes visuais do jogo."
})

-- Vari√°veis para verificar se o ESP est√° ativado ou n√£o
local espAtivo = false
local espHealthBarAtivo = false
local espParts = {}

-- Fun√ß√£o para criar ou atualizar a barra de vida de um jogador
local function createOrUpdateHealthBar(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        -- Remove barra de vida existente, se houver
        if player.Character:FindFirstChild("HealthBar") then
            player.Character:FindFirstChild("HealthBar"):Destroy()
        end

        -- Cria nova barra de vida
        local healthBar = Instance.new("BillboardGui")
        healthBar.Name = "HealthBar"
        healthBar.Size = UDim2.new(4, 0, 0.6, 0) -- Ajusta a largura e altura da barra
        healthBar.StudsOffset = Vector3.new(0, 3, 0) -- Eleva a barra acima do player
        healthBar.AlwaysOnTop = true
        healthBar.Adornee = player.Character:WaitForChild("HumanoidRootPart")
        healthBar.Parent = player.Character

        local barBackground = Instance.new("Frame")
        barBackground.Size = UDim2.new(1, 0, 1, 0)
        barBackground.BackgroundColor3 = Color3.new(0, 0, 0)
        barBackground.BorderSizePixel = 1 -- Contorno preto fino
        barBackground.Parent = healthBar

        local bar = Instance.new("Frame")
        bar.Size = UDim2.new(player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth, 0, 1, 0)
        bar.BackgroundColor3 = Color3.new(0, 1, 0)
        bar.BorderSizePixel = 0
        bar.Parent = barBackground

        -- Atualiza a barra de vida quando a sa√∫de do jogador muda
        player.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            if player.Character and player.Character:FindFirstChild("Humanoid") then
                local healthPercentage = player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth
                bar.Size = UDim2.new(healthPercentage, 0, 1, 0) -- Garante que a barra n√£o fique totalmente preta
            end
        end)
    end
end

-- Fun√ß√£o para ativar o ESP Player
local function ativarESPPlayer()
    espAtivo = true
    game:GetService("RunService").RenderStepped:Connect(function()
        if not espAtivo then return end
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                if not player.Character:FindFirstChild("Highlight") then
                    local highlight = Instance.new("Highlight")
                    highlight.Adornee = player.Character
                    highlight.FillColor = Color3.new(1, 0, 0)
                    highlight.OutlineColor = Color3.new(1, 0, 0)
                    highlight.Parent = player.Character
                end
            end
        end
    end)
end

-- Fun√ß√£o para desativar o ESP Player
local function desativarESPPlayer()
    espAtivo = false
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Highlight") then
            player.Character.Highlight:Destroy()
        end
    end
end

-- Fun√ß√£o para ativar o ESP Health Bar
local function ativarESPHealthBar()
    espHealthBarAtivo = true
    RunService.Heartbeat:Connect(function()
        if espHealthBarAtivo then
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer then
                    createOrUpdateHealthBar(player)
                end
            end
        end
    end)
end

-- Fun√ß√£o para desativar o ESP Health Bar
local function desativarESPHealthBar()
    espHealthBarAtivo = false
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HealthBar") then
            player.Character.HealthBar:Destroy()
        end
    end
end

-- Adicionar o Toggle "ESP Player" na aba Visual
Tabs.Visual:AddToggle("EspPlayerToggle", {
    Title = "ESP Player",
    Description = "Ative ou desative a exibi√ß√£o dos jogadores",
    Default = false,
    Callback = function(state)
        if state then
            print("ESP Player Ativado")
            ativarESPPlayer()
        else
            print("ESP Player Desativado")
            desativarESPPlayer()
        end
    end
})

-- Adicionar o Toggle "ESP Health Bar" na aba Visual
Tabs.Visual:AddToggle("EspHealthBarToggle", {
    Title = "ESP Health Bar",
    Description = "Ative ou desative a exibi√ß√£o da barra de vida dos jogadores",
    Default = false,
    Callback = function(state)
        if state then
            print("ESP Health Bar Ativado")
            ativarESPHealthBar()
        else
            print("ESP Health Bar Desativado")
            desativarESPHealthBar()
        end
    end
})

-- Atualiza o ESP e barras de sa√∫de quando novos jogadores entram no jogo
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if espAtivo then
            ativarESPPlayer()
        end
        if espHealthBarAtivo then
            createOrUpdateHealthBar(player)
        end
    end)
end)

-- Atualiza o ESP e barras de sa√∫de quando um jogador renasce
for _, player in pairs(game.Players:GetPlayers()) do
    player.CharacterAdded:Connect(function()
        if espAtivo then
            ativarESPPlayer()
        end
        if espHealthBarAtivo then
            createOrUpdateHealthBar(player)
        end
    end)
end)

-- Atualiza o ESP a cada 40 milissegundos
RunService.Heartbeat:Connect(function()
    if espAtivo then
        ativarESPPlayer()
    end
    if espHealthBarAtivo then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                createOrUpdateHealthBar(player)
            end
        end
    end
end)
